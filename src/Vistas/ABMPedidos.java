package Vistas;

import AccesoADatos.*;
import Entidades.*;
import java.awt.Color;

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.*;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class ABMPedidos extends javax.swing.JInternalFrame {

    public static Color naranja = new Color(255, 84, 25);
    private final DefaultTableModel modelo = new DefaultTableModel() {

        public boolean isCellEditable(int f, int c) {
            if (c == 3) {
                return true;
            } else {
                return false;
            }

        }
    };

    public ABMPedidos() {
        initComponents();

        //Carga los ID Mesas al jComboBox
        cargarIDMesas();

        //Carga los meseros al jComboBox
        cargarMeseros();

        //Inhabilita los botones 'Nuevo' y 'Eliminar'
        jbLimpiar.setEnabled(false);
        jbEliminar.setEnabled(false);

        //para que por defecto el JDateChooser muestre la fecha de hoy
        Calendar fechaActual = new GregorianCalendar();
        jdcFechaYHora.setCalendar(fechaActual);

        jPanel1.setBackground(Color.WHITE);
        panelTitle.setBackground(naranja);
        jTitle.setForeground(Color.WHITE);
        btnSalir.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jbGuardar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jdcFechaYHora = new com.toedter.calendar.JDateChooser();
        btnAgregProd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfIDPedido = new javax.swing.JTextField();
        jcbIDMesa = new javax.swing.JComboBox<>();
        jcbMesero = new javax.swing.JComboBox<>();
        panelTitle = new javax.swing.JPanel();
        jTitle = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnSalir = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setPreferredSize(new java.awt.Dimension(600, 500));

        jPanel1.setPreferredSize(new java.awt.Dimension(600, 500));

        jbGuardar.setFont(new java.awt.Font("Yu Gothic Medium", 1, 10)); // NOI18N
        jbGuardar.setForeground(new java.awt.Color(60, 63, 65));
        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardarPro.png"))); // NOI18N
        jbGuardar.setText("GUARDAR");
        jbGuardar.setContentAreaFilled(false);
        jbGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbGuardar.setRolloverEnabled(true);
        jbGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardarProX48.png"))); // NOI18N
        jbGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbLimpiar.setFont(new java.awt.Font("Yu Gothic Medium", 1, 10)); // NOI18N
        jbLimpiar.setForeground(new java.awt.Color(60, 63, 65));
        jbLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nuevoPro.png"))); // NOI18N
        jbLimpiar.setText("LIMPIAR");
        jbLimpiar.setContentAreaFilled(false);
        jbLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbLimpiar.setRolloverEnabled(true);
        jbLimpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nuevoProX48.png"))); // NOI18N
        jbLimpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbEliminar.setFont(new java.awt.Font("Yu Gothic Medium", 1, 10)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(60, 63, 65));
        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrarPro.png"))); // NOI18N
        jbEliminar.setText("ELIMINAR");
        jbEliminar.setContentAreaFilled(false);
        jbEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEliminar.setRolloverEnabled(true);
        jbEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrarProX48.png"))); // NOI18N
        jbEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jdcFechaYHora.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N

        btnAgregProd.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        btnAgregProd.setText("Agregar Productos");
        btnAgregProd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregProdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jLabel2.setText("Id Pedido");

        jLabel3.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jLabel3.setText("Id Mesa");

        jLabel4.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jLabel4.setText("Mesero");

        jLabel6.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jLabel6.setText("Fecha y Hora");

        jtfIDPedido.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jtfIDPedido.setBorder(null);

        jcbIDMesa.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jcbIDMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbIDMesaActionPerformed(evt);
            }
        });

        jcbMesero.setEditable(true);
        jcbMesero.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jcbMesero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMeseroActionPerformed(evt);
            }
        });

        jTitle.setFont(new java.awt.Font("Yu Gothic Medium", 1, 36)); // NOI18N
        jTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTitle.setText("ABM DE PEDIDOS");

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupaGato.png"))); // NOI18N
        jbBuscar.setContentAreaFilled(false);
        jbBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbBuscar.setRolloverEnabled(true);
        jbBuscar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupaGatoGrande.png"))); // NOI18N
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTitleLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbBuscar)
                    .addComponent(jTitle))
                .addGap(6, 6, 6))
        );

        jLabel1.setFont(new java.awt.Font("Yu Gothic Medium", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnSalirLayout = new javax.swing.GroupLayout(btnSalir);
        btnSalir.setLayout(btnSalirLayout);
        btnSalirLayout.setHorizontalGroup(
            btnSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnSalirLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnSalirLayout.setVerticalGroup(
            btnSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSalirLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loguito105.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfIDPedido)
                                    .addComponent(jcbIDMesa, 0, 128, Short.MAX_VALUE)
                                    .addComponent(jSeparator1))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jdcFechaYHora, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jcbMesero, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120)
                                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(231, 231, 231)
                                .addComponent(btnAgregProd)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfIDPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jcbMesero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbIDMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(btnAgregProd)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbEliminar)
                            .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbGuardar))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jdcFechaYHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(511, 511, 511))
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel7))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        //Limpia la pantalla para cargar un pedido nuevo
        jtfIDPedido.setText("");
        jbLimpiar.setEnabled(false);
        jbEliminar.setEnabled(false);
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        //Si no completa el campo 'ID Pedido'
        if (jtfIDPedido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe completar el campo 'ID Pedido'");

        } else {
            try {
                //Asignamos a una variable el dato ingresado en la vista
                int idPedidoBuscado = Integer.parseInt(jtfIDPedido.getText());

                //Instanciamos un pedido y pedidoData para usar luego
                PedidoData pedidoD = new PedidoData();
                Pedido pedidoBuscado = new Pedido();

                //Buscamos un pedido por su id usando buscar de pedidoData
                pedidoBuscado = pedidoD.buscarPedidoPorID(idPedidoBuscado);

                //Mostramos en la vista los datos del pedido encontrado
                jtfIDPedido.setText(Integer.toString(pedidoBuscado.getIdPedido()));
                jcbIDMesa.setSelectedItem(pedidoBuscado.getMesa().getIdMesa());
                jcbMesero.setSelectedItem(pedidoBuscado.getMesero());

                //Habilitamos los botones 'Limpiar' y 'Eliminar'
                jbLimpiar.setEnabled(true);
                jbEliminar.setEnabled(true);

            } catch (NumberFormatException nfe) {
                //si ingresa letras o símbolos
                JOptionPane.showMessageDialog(this, "Ingrese sólo números");
                jtfIDPedido.setText("");
            } catch (NullPointerException npe) {
                //si no existe pedido con ese id en la vista, salta el JOptionPane del método
            }
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jcbIDMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbIDMesaActionPerformed
        //Utilizamos el cambio de mesa para borrar la consulta anterior
        borrarFilas();


    }//GEN-LAST:event_jcbIDMesaActionPerformed

    private void jcbMeseroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMeseroActionPerformed
        //Utilizamos el cambio de mesa para borrar la consulta anterior
        borrarFilas();

    }//GEN-LAST:event_jcbMeseroActionPerformed

    private void btnAgregProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregProdActionPerformed

        try{
            if (jtfIDPedido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete el campo ID Pedido");
        } else {
            PedidoData pedidoD = new PedidoData();
            Pedido p = pedidoD.buscarPedidoPorID(Integer.parseInt(jtfIDPedido.getText()));
            if (p.getIdPedido() == Integer.parseInt(jtfIDPedido.getText())) {
                ABMproductospedidos pp = new ABMproductospedidos();
                MenuPrincipal.escritorio.add(pp);

                pp.setVisible(true);
                pp.moveToFront();
            }

        }
        } catch(NullPointerException ex ){
            
        }
        


    }//GEN-LAST:event_btnAgregProdActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed

        if (jtfIDPedido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete el campo 'ID Pedido'");

        } else {
            try {
                //Instanciamos pedido y pedidoData para usar luego
                Pedido p = new Pedido();
                PedidoData pedidoD = new PedidoData();

                //Creamos una variable con el ID tipeado en la vista
                int IDPedidoAEliminar = Integer.parseInt(jtfIDPedido.getText());

                //Buscamos el pedido con ese id y lo enviamos a los pedidos ya creado
                p = pedidoD.buscarPedidoPorID(IDPedidoAEliminar);

                //Eliminamos la mesa llamando al método eliminarMesa de mesaData
                pedidoD.eliminarPedido(p.getIdPedido());

                //Limpiamos los campos de la vista
                jtfIDPedido.setText("");
                jcbMesero.setSelectedItem(null);
                jcbIDMesa.setSelectedItem(null);

            } catch (NumberFormatException ex) {
                //Si no tipea un documento en la vista
                JOptionPane.showMessageDialog(null, "Ingrese un ID Pedido");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        //Instanciamos *Datas para usar luego
        PedidoData pedidoD = new PedidoData();
        MesaData mesaD = new MesaData();
        MeseroData meseroD = new MeseroData();

        if (jtfIDPedido.getText().isEmpty()) {
            jtfIDPedido.setText("-1");
        }
        try {
            //creamos las variables y asignamos los valores tipeados en la vista
            //     int idPedidoAGuardar = Integer.parseInt(jtfIDPedido.getText());
            Mesa mesaAGuardar = mesaD.buscarMesaPorID((Integer) jcbIDMesa.getSelectedItem());
            List<Producto> prods = null; //aún no ha sido definido
            Mesero meseroAGuardar = (Mesero) jcbMesero.getSelectedItem();

            boolean entregadoAGuardar = false;
            boolean cobradoAGuardar = false;
            // getting the system date 
            Date diaEnVista = jdcFechaYHora.getDate();
            // getting the object of the Timestamp class
            Timestamp diaAGuardar = new Timestamp(diaEnVista.getTime());
            //Instanciamos un pedido con los parámetros anteriores
            Pedido p = new Pedido(mesaAGuardar, prods, meseroAGuardar, entregadoAGuardar, cobradoAGuardar, diaAGuardar);

            //declaramos una variable bandera por si ya existe el id tipeado en vista
            boolean existeID = false;

            //Recorremos la lista de pedidos existentes
            for (Pedido existingPedido : pedidoD.listarPedidos()) {

                if (existingPedido.getIdPedido() == Integer.parseInt(jtfIDPedido.getText())) {
                    //Si existe el producto, seteamos el id para poder acceder al método modificar; si no existe se activa la bandera más abajo 
                    p.setIdPedido(pedidoD.buscarPedidoPorID(Integer.parseInt(jtfIDPedido.getText())).getIdPedido());
                    existeID = true;
                    break;
                }
            }
            //Si ya existe el pedido puede tener productos asociados, o no, y si no existe no tiene productos asociados. Para ambos casos usamos guardarPedido con productos asociados en null 

            JOptionPane.showConfirmDialog(null, "Pedido guardado");
            if (existeID == true) {
                pedidoD.modificarPedido(p);
            } else {
                pedidoD.guardarPedido(p);

            }
            //Habilitamos los botones 'Eliminar' y 'Limpiar'
            jbEliminar.setEnabled(true);
            jbLimpiar.setEnabled(true);

        } catch (NullPointerException ex) {
            //Si algún campo está vacío
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } catch (NumberFormatException ex) {
            //Si no usa números enteros en todos los campos
            JOptionPane.showMessageDialog(null, "Use sólo números enteros");

            // TODO add your handling code here:
    }//GEN-LAST:event_jbGuardarActionPerformed
    }
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered

        btnSalir.setBackground(Color.red);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        btnSalir.setBackground(Color.WHITE);
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregProd;
    private javax.swing.JPanel btnSalir;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jTitle;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JComboBox<Integer> jcbIDMesa;
    private javax.swing.JComboBox<Mesero> jcbMesero;
    private com.toedter.calendar.JDateChooser jdcFechaYHora;
    public static javax.swing.JTextField jtfIDPedido;
    private javax.swing.JPanel panelTitle;
    // End of variables declaration//GEN-END:variables

//    private void armarTabla() {
//        //Agregamos las cabeceras a la tabla
//        modelo.addColumn("id");
//        modelo.addColumn("nombre");
//        modelo.addColumn("precio");
//        modelo.addColumn("cantidad");
//
//        Seteamos el modelo a la tabla
//        jtTablaProductosPedidos.setModel(modelo);
//
//        //Impedimos el reordenamiento de la cabecera
//        jtTablaProductosPedidos.getTableHeader().setReorderingAllowed(false);
//
//        //para centrar las celdas del encabezado
//        DefaultTableCellRenderer header = (DefaultTableCellRenderer) jtTablaProductosPedidos.getTableHeader().getDefaultRenderer();
//        header.setHorizontalAlignment(SwingConstants.CENTER);
//
//        //para centrar los datos de la primera columna
//        DefaultTableCellRenderer tcr0 = new DefaultTableCellRenderer();
//        tcr0.setHorizontalAlignment(SwingConstants.CENTER);
//        jtTablaProductosPedidos.getColumnModel().getColumn(0).setCellRenderer(tcr0);
//
//    }
    private void borrarFilas() {
        //Evita la repetición de las filas en la tabla
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    private void cargarIDMesas() {
        //Cargamos los IDMesas al jComboBox
        MesaData mesaD = new MesaData();

        for (Mesa aux : mesaD.listarMesa()) {
            jcbIDMesa.addItem(aux.getIdMesa());
        }
    }

    private void cargarMeseros() {
        //Cargamos los meseros al jComboBox
        MeseroData meseroD = new MeseroData();

        for (Mesero aux : meseroD.listarMesero()) {
            jcbMesero.addItem(aux);

        }
    }
}
// private void cargarProductos() {
//        //Cargamos los productos al jComboBox
//        ProductoData prodData = new ProductoData();
//
//        for (Producto aux : prodData.listarProducto()) {
//            cbProductos.addItem(aux);
//        }
//    }

//     private void cargarTablaProductos(){
//         
//         ProductoData prodD = new ProductoData();
//         
//         //Listamos los productos en la tabla
//        for (Producto aux : prodD.listarProducto()) {
//            modelo.addRow(new Object[]{aux.getIdProducto(),aux.getNombre(), aux.getPrecio(), spinner.getValue()});
//        }

